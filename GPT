import random
import itertools
import datetime

class Client:
    def __init__(self, name):
        self.name = name
        self.Connection_serveur_client = False
        self.virement = False
        self.depot_cheque= False
        self.appel_tel = False
        self.emprunt=False
        self.Connection_serveur_admin=False
        self.vivement_Approuve=False
        self.Approuve_Pret=False
        self.Connection_serveur_employee=False
        self.Commit_cheque=False

class Employee:
    def __init__(self, name):
        self.name=name
        self.Connection_serveur_client = False
        self.virement = False
        self.depot_cheque= False
        self.rdv_planing = False
        self.appel_tel = False
        self.emprunt=False
        self.Connection_serveur_admin=False
        self.vivement_Approuve=False
        self.Approuve_Pret=False
        self.Connection_serveur_employee=False
        self.Commit_cheque=False

class Admin:
    def __init__(self, name):
        self.name=name
        self.Connection_serveur_client = False
        self.virement = False
        self.depot_cheque= False
        self.rdv_planing = False
        self.appel_tel = False
        self.emprunt=False
        self.Connection_serveur_admin=False
        self.vivement_Approuve=False
        self.Approuve_Pret=False
        self.Connection_serveur_employee=False
        self.Commit_cheque=False
        self.server_start=False
def RandomEvent(char1, char4, char5):
   def RandomEvent(char1, char4, char5, desired_result):
    listx = [0, 0, 0, 0, 0, 0, 0]

    char4.Connection_serveur_admin = random.choice([True, False])
    if not char4.Connection_serveur_admin:
        return listx

    listx[0] = 1

    char4.server_start = random.choice([True, False])
    if not char4.server_start:
        return listx

    listx[1] = 1

    char1.Connection_serveur_client = random.choice([True, False])
    if char1.Connection_serveur_client:
        listx[2] = 1

    char1.depot_cheque = random.choice([True, False])
    if char1.depot_cheque:
        listx[4] = 1

    char5.Commit_cheque = random.choice([True, False])
    if char1.depot_cheque and char5.Commit_cheque:
        listx[6] = 1

    char1.virement = random.choice([True, False])
    if char1.virement:
        listx[3] = 1

    char5.vivement_Approuve = random.choice([True, False])
    if char1.virement and char5.vivement_Approuve:
        listx[5] = 1

    if listx == desired_result:
        return listx

    return None


def Eventgen(desired_result):
    choices = [True, False]
    num_choices = len(choices)
    list_length = len(desired_result)

    for combination in itertools.product(choices, repeat=num_choices):
        listx = list(combination)[:list_length]
        
        char1 = Client("Client1")
        char4 = Admin("IT Support")
        char5 = Employee("Directeur")

        RandomEvent(char1, char4, char5)  # Call your random event function
        
        if listx == desired_result:
            return listx

    return None

if __name__ == '__main__':
    print("Enter the desired outcome as a list of 1s and 0s:")
    desired_result = input().split()
    desired_result = [int(x) for x in desired_result]

    result = Eventgen(desired_result)
    if result:
        print("Combination found:", result)
    else:
        print("No combination found.")
